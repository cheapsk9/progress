--!optimize 2
--!nolint
local n=next local e=unpack local u=tostring local l=setmetatable local _=table.find local d=Color3.toHSV local f=Color3.fromHSV local b=coroutine.resume local a=coroutine.create local k=Color3.new() local r=Progress local t local _={} local function v()end local function p(_,...)local _,a=b(a(_),...) if not _ then r:ShowToast({Title="Callback Error",Text=a,Duration=10,Type=5})end end local function s(_,b)_.Value=b local a=_.Callback local _=_.Changed if type(a)=="function"then p(a,b)end if type(_)=="function"then p(_,b)end end local function q(a,_)a.Changed=_ _(a.Value)end local function o(a,_)a.__Element:SetValue(_)end local function b(a)local _=a.__Element _:SetValue(f(a.Hue,a.Sat,a.Vib),_.Transparency)end local function c(c,_)local a,b,_=d(_) c.Hue=a c.Sat=b c.Vib=_ end local function h(b,a,_)b.Transparency=_ or 0 b:SetHSVFromRGB(a) b:Display()end local function j(b,_,a)local _=f(e(_)) b:SetValueRGB(b,_,a)end local function m(_,b)if _.Multi then local a={} for _,_ in n,b do a[_]=true end b=a else b=b[1]end s(_,b)end local function f(_,a)if a then _.Values=a _.__Element:SetValues(a)end end local function e(_,b)local a=_.__Element if _.Multi then local c={} local _=_.Values local d=0 for _ in n,b do d=d+1 c[d]=_ end a:SetSelection(c)else a:SetSelection({b})end end local function g(b,a,_)a=a or b.Key _=_ or b.Mode b.Value=a b.Mode=_ end local function i(_,a)_.Clicked=a end local function d(b)local a=b.Callback local _=b.Clicked if type(a)=="function"then p(a,b.Toggled)end if type(_)=="function"then p(_,b.Toggled)end end local function a(_)return _.Toggled end local g={Paragraph=function(_,a)local _=_:CreateElement("Label",{Label={Title=a.Title or"",Text=a.Content or"",PrimaryContent=a.Section}}) return{},_ end,Button=function(_,b)local a=b.Callback local _=_:CreateElement("Button",{Label={Title=b.Title or"Button",Text=b.Description or""},Simple=true}) if type(a)=="function"then _.Click:Connect(function()p(a)end)end return{},_ end,Toggle=function(_,a,c)local e=c.Title local d=c.Description e=e and u(e)or"Toggle" d=d and u(d)or"" local b=c.Default or false local f local _=_:CreateElement("Toggle",{Value=b,Label={Title=e,Text=d},OnChanged=function(_)s(f,_)end}) f={__Index=a,Value=nil,Title=e,SetValue=o,Callback=c.Callback or v,OnChanged=q,Type="Toggle"} s(f,b) t.Options[a]=f return f,_ end,Slider=function(a,c,j)local h=j.Title local g=j.Description h=h and u(h)or"Slider" g=g and u(g)or"" local d=j.Min local e=j.Max local _=tonumber(j.Default)or(d+e)/2 local b=j.Rounding local f=10^-b f=f<=1 and f or 1 local i local _=a:CreateElement("Slider",{Label={Title=h,Text=g},Min=d,Max=e,Value=_,Step=f,OnChanged=function(_)s(i,_)end}) i={__Index=c,Value=nil,Min=d,Max=e,Rounding=b,Title=h,SetValue=o,Callback=j.Callback or v,OnChanged=q,Type="Slider"} local a=j.Value if a then _:SetValue(a)end s(i,a) t.Options[c]=i return i,_ end,Dropdown=function(_,a,i)local g=i.Title local d=i.Description g=g and u(g)or"Dropdown" d=d and u(d)or"" local j=i.Default local b=i.Values local c=i.Multi if not c then if type(j)=="number"then j={b[j]}else j={j}end end local h local _=_:CreateElement("Dropdown",{Label={Title=g,Text=d},Values=b,Selected=j,MultiSelect=c,SelectionLocks=not i.AllowNull,OnSelectionChanged=function(_)m(h,_)end}) h={__Index=a,Values=b,Value=j,Multi=c,Buttons={},Opened=false,Callback=i.Callback or v,OnChanged=q,Type="Dropdown",SetValue=e,SetValues=f} m(h,c and j or{j}) t.Options[a]=h return h,_ end,Colorpicker=function(_,a,i)local g=i.Title local f=i.Description g=g and u(g)or"Color Picker" f=f and u(f)or"" local e=i.Default or k local d=i.Transparency local k local _=_:CreateElement("ColorPicker",{Label={Title=g,Text=f},Value=e,AlphaEnabled=not not d,Alpha=d or 0,OnChanged=function(_,a)k.Transparency=a s(k,_)end}) k={__Index=a,__Element=_,Value=e,Transparency=d or 0,Title=g,Callback=i.Callback or v,OnChanged=q,Type="Colorpicker",Display=b,SetHSVFromRGB=c,SetValueRGB=h,SetValue=j} k:SetHSVFromRGB(e) k:Display() t.Options[a]=k return k,_ end,Keybind=function(_,b,e)local c=e.Title local _=e.Description c=c and u(c)or"Toggle" _=_ and u(_)or"" local _=e.Default or false local c local _={Destroy=v,SetLabel=v} c={__Index=b,Value=e.Default,Toggled=false,Mode=e.Mode or"Toggle",Callback=e.Callback or v,ChangedCallback=e.ChangedCallback or v,OnChanged=q,Type="Keybind",GetState=a,SetValue=g,OnClick=i,DoClick=d} t.Options[b]=c return c,_ end,Input=function(_,b,h)local e=h.Title local f=h.Description e=e and u(e)or"Text Box" f=f and u(f)or"" local a=h.Default or"" local c=h.Numeric or false local d=h.Finished or false local g local e=_:CreateElement("TextBox",{Label={Title=e,Text=f},Value=a,Numeric=c}) if d then e.FocusLost:Connect(function(_,_)s(g,e.Value)end)else e.OnChanged=function(_)s(g,_)end end g={__Index=b,Value=a,Numeric=c,Finished=d,SetValue=o,Callback=h.Callback or v,OnChanged=q,Type="Input"} t.Options[b]=g return g,e end} local function e(_)_.__Element:Destroy() t.Options[_.__Index]=nil end local function d(a,_)a.__Element:SetLabel({Title=_})end local function f(a,_)a.__Element:SetLabel({Text=_})end local function c(a,c,b,_)local a=a.__Base local a,_=g[c](a,b,_) a.__Element=_ a.Destroy=e a.SetTitle=d a.SetDesc=f return a end local e={} local a=function(a,_)return l({__Base=a.__Page:CreateSection(_,true),Type="Section"},{__index=e})end for d in n,g do e["Add"..d]=function(_,b,a)return c(_,d,b,a)end end local b=true t={Version="V2",Options={},SetTheme=v,ToggleAcrylic=v,ToggleTransparency=v,CreateWindow=function(_,_)if b then b=false r:SetFluentTranslationHack() local b=_.SubTitle local _=_.MinimizeKeybind if b then r.Window:SetSubtitle(b)end if _ then local _ end return{AddTab=function(_,_)local b=_.Title or"" local _=r.Hub:CreatePage(b,_.Icon) return l({__Page=_,__Base=_,Selected=false,Name=b,AddSection=a,Type="Tab"},{__index=e})end,Dialog=function(_,_)r.Window:ShowDialog({Title=_.Title,Text=_.Content,Buttons=_.Buttons})end,SelectTab=function(_,_)end}end end,Notify=function(_,_)return r:ShowToast({Title=_.Title,Text=_.Content,Duration=_.Duration,Type=0})end,Destroy=function(_)r.Window:Close()end} return t
