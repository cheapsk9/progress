--!optimize 2
--!nolint
local n=next local i=unpack local t=tostring local j=setmetatable local _=table.find local d=Color3.toHSV local k=Color3.fromHSV local b=coroutine.resume local a=coroutine.create local c=Color3.new() local r=Progress local q local _={} local function p(_)end local function l(_,...)local a,_=b(a(_),...) if not a then r:ShowToast({Title="Callback Error",Text=_,Duration=10,Type=5})end end local function s(a,b)a.Value=b local _=a.Callback local a=a.Changed if type(_)=="function"then l(_,b)end if type(a)=="function"then l(a,b)end end local function o(a,_)a.Changed=_ _(a.Value)end local function m(a,_)a.__Element:SetValue(_)end local function f(a)local _=a.__Element _:SetValue(k(a.Hue,a.Sat,a.Vib),_.Transparency)end local function e(c,_)local a,b,_=d(_) c.Hue=a c.Sat=b c.Vib=_ end local function h(b,_,a)b.Transparency=a or 0 b:SetHSVFromRGB(_) b:Display()end local function g(b,_,a)local _=k(i(_)) b:SetValueRGB(b,_,a)end local function i(_,b)if _.Multi then local a={} for _,_ in n,b do a[_]=true end b=a else b=b[1]end s(_,b)end local function b(_,a)if a then _.Values=a _.__Element:SetValues(a)end end local function d(_,c)local a=_.__Element if _.Multi then local b={} local _=_.Values local d=0 for _ in n,c do d=d+1 b[d]=_ end a:SetSelection(b)else a:SetSelection({c})end end local g={Paragraph=function(_,a)local _=_:CreateElement("Label",{Label={Title=a.Title or"",Text=a.Content or"",PrimaryContent=a.Section}}) return{},_ end,Button=function(_,b)local a=b.Callback local _=_:CreateElement("Button",{Label={Title=b.Title or"Button",Text=b.Description or""},Simple=true}) if type(a)=="function"then _.Click:Connect(function()l(a)end)end return{},_ end,Toggle=function(_,a,d)local e=d.Title local c=d.Description e=e and t(e)or"Toggle" c=c and t(c)or"" local b=d.Default or false local f local _=_:CreateElement("Toggle",{Value=b,Label={Title=e,Text=c},OnChanged=function(_)s(f,_)end}) f={Value=nil,Title=e,SetValue=m,Callback=d.Callback or p,OnChanged=o,Type="Toggle"} s(f,b) q.Options[a]=f return f,_ end,Slider=function(b,a,j)local h=j.Title local g=j.Description h=h and t(h)or"Slider" g=g and t(g)or"" local e=j.Min local d=j.Max local _=tonumber(j.Default)or(e+d)/2 local c=j.Rounding local f=10^-c f=f<=1 and f or 1 local i local _=b:CreateElement("Slider",{Label={Title=h,Text=g},Min=e,Max=d,Value=_,Step=f,OnChanged=function(_)s(i,_)end}) i={Value=nil,Min=e,Max=d,Rounding=c,Title=h,SetValue=m,Callback=j.Callback or p,OnChanged=o,Type="Slider"} local b=j.Value if b then _:SetValue(b)end s(i,b) q.Options[a]=i return i,_ end,Dropdown=function(_,a,k)local h=k.Title local g=k.Description h=h and t(h)or"Dropdown" g=g and t(g)or"" local f=k.Default local c=k.Values local e=k.Multi local j local _=_:CreateElement("Dropdown",{Label={Title=h,Text=g},Values=c,Selected=f,MultiSelect=e,SelectionLocks=not k.AllowNull,OnSelectionChanged=function(_)i(j,_)end}) j={Values=c,Value=f,Multi=e,Buttons={},Opened=false,Callback=k.Callback or p,OnChanged=o,Type="Dropdown",SetValue=d,SetValues=b} i(j,e and f or{f}) q.Options[a]=j return j,_ end,Colorpicker=function(a,_,i)local j=i.Title local d=i.Description j=j and t(j)or"Color Picker" d=d and t(d)or"" local c=i.Default or c local b=i.Transparency local k local a=a:CreateElement("ColorPicker",{Label={Title=j,Text=d},Value=c,AlphaEnabled=not not b,Alpha=b or 0,OnChanged=function(_,a)k.Transparency=a s(k,_)end}) k={__Element=a,Value=c,Transparency=b or 0,Title=j,Callback=i.Callback or p,OnChanged=o,Type="Colorpicker",Display=f,SetHSVFromRGB=e,SetValueRGB=h,SetValue=g} k:SetHSVFromRGB(c) k:Display() q.Options[_]=k return k,a end,Keybind=function(_,_)return{},{}end,Input=function(a,_,h)local f=h.Title local e=h.Description f=f and t(f)or"Text Box" e=e and t(e)or"" local c=h.Default or"" local d=h.Numeric or false local b=h.Finished or false local g local a=a:CreateElement("TextBox",{Label={Title=f,Text=e},Value=c,Numeric=d}) if b then a.FocusLost:Connect(function(_,_)s(g,a.Value)end)else a.OnChanged=function(_)s(g,_)end end g={Value=c,Numeric=d,Finished=b,SetValue=m,Callback=h.Callback or p,OnChanged=o,Type="Input"} q.Options[_]=g return g,a end} local function f(_)_.__Element:Destroy()end local function e(a,_)a.__Element:SetLabel({Title=_})end local function d(a,_)a.__Element:SetLabel({Text=_})end local function c(_,b,c,a)local _=_.__Base local a,_=g[b](_,c,a) a.__Element=_ a.Destroy=f a.SetTitle=e a.SetDesc=d return a end local e={} local a=function(a,_)return j({__Base=a.__Page:CreateSection(_,true),Type="Section"},{__index=e})end for d in n,g do e["Add"..d]=function(_,b,a)return c(_,d,b,a)end end local b=true q={Version="V2",Options={},SetTheme=function(_,_)end,ToggleAcrylic=function(_,_)end,ToggleTransparency=function(_,_)end,CreateWindow=function(_,_)if b then b=false r:SetFluentTranslationHack() local b=_.SubTitle local _=_.MinimizeKeybind if b then r.Window:SetSubtitle(b)end if _ then local _ end return{AddTab=function(_,_)local b=_.Title or"" local _=r.Hub:CreatePage(b,_.Icon) return j({__Page=_,__Base=_,Selected=false,Name=b,AddSection=a,Type="Tab"},{__index=e})end,Dialog=function(_,_)r.Window:ShowDialog({Title=_.Title,Text=_.Content,Buttons=_.Buttons})end,SelectTab=function(_,_)end}end end,Notify=function(_,_)return r:ShowToast({Title=_.Title,Text=_.Content,Duration=_.Duration,Type=0})end,Destroy=function(_)r.Window:Close()end} return q