--!optimize 2
--!nolint
local m=next local c=unpack local t=tostring local l=setmetatable local _=table.find local a=Color3.toHSV local e=Color3.fromHSV local b=coroutine.resume local d=coroutine.create local i=Color3.new() local q=Progress local s local _={} local function u()end local function o(_,...)local a,_=b(d(_),...) if not a then q:ShowToast({Title="Callback Error",Text=_,Duration=10,Type=5})end end local function r(a,b)a.Value=b local _=a.Callback local a=a.Changed if type(_)=="function"then o(_,b)end if type(a)=="function"then o(a,b)end end local function p(a,_)a.Changed=_ _(a.Value)end local function n(_,a)_.__Element:SetValue(a)end local function h(a)local _=a.__Element _:SetValue(e(a.Hue,a.Sat,a.Vib),_.Transparency)end local function g(c,_)local b,a,_=a(_) c.Hue=b c.Sat=a c.Vib=_ end local function b(b,a,_)b.Transparency=_ or 0 b:SetHSVFromRGB(a) b:Display()end local function a(b,_,a)local _=e(c(_)) b:SetValueRGB(b,_,a)end local function k(_,b)if _.Multi then local a={} for _,_ in m,b do a[_]=true end b=a else b=b[1]end r(_,b)end local function _(_,a)if a then _.Values=a _.__Element:SetValues(a)end end local function c(_,c)local b=_.__Element if _.Multi then local a={} local _=_.Values local d=0 for _ in m,c do d=d+1 a[d]=_ end b:SetSelection(a)else b:SetSelection({c})end end local function e(b,_,a)_=_ or b.Key a=a or b.Mode b.Value=_ b.Mode=a end local function d(_,a)_.Clicked=a end local function f(b)local _=b.Callback local a=b.Clicked if type(_)=="function"then o(_,b.Toggled)end if type(a)=="function"then o(a,b.Toggled)end end local function j(_)return _.Toggled end local g={Paragraph=function(_,a)local _=_:CreateElement("Label",{Label={Title=a.Title or"",Text=a.Content or"",PrimaryContent=a.Section}}) return{},_ end,Button=function(_,b)local a=b.Callback local _=_:CreateElement("Button",{Label={Title=b.Title or"Button",Text=b.Description or""},Simple=true}) if type(a)=="function"then _.Click:Connect(function()o(a)end)end return{},_ end,Toggle=function(_,a,c)local e=c.Title local d=c.Description e=e and t(e)or"Toggle" d=d and t(d)or"" local b=c.Default or false local f local _=_:CreateElement("Toggle",{Value=b,Label={Title=e,Text=d},OnChanged=function(_)r(f,_)end}) f={__Index=a,Value=nil,Title=e,SetValue=n,Callback=c.Callback or u,OnChanged=p,Type="Toggle"} r(f,b) s.Options[a]=f return f,_ end,Slider=function(a,c,j)local i=j.Title local g=j.Description i=i and t(i)or"Slider" g=g and t(g)or"" local d=j.Min local e=j.Max local _=tonumber(j.Default)or(d+e)/2 local b=j.Rounding local f=10^-b f=f<=1 and f or 1 local h local _=a:CreateElement("Slider",{Label={Title=i,Text=g},Min=d,Max=e,Value=_,Step=f,OnChanged=function(_)r(h,_)end}) h={__Index=c,Value=nil,Min=d,Max=e,Rounding=b,Title=i,SetValue=n,Callback=j.Callback or u,OnChanged=p,Type="Slider"} local a=j.Value if a then _:SetValue(a)end r(h,a) s.Options[c]=h return h,_ end,Dropdown=function(a,d,j)local f=j.Title local h=j.Description f=f and t(f)or"Dropdown" h=h and t(h)or"" local g=j.Default local b=j.Values local e=j.Multi local i local a=a:CreateElement("Dropdown",{Label={Title=f,Text=h},Values=b,Selected=g,MultiSelect=e,SelectionLocks=not j.AllowNull,OnSelectionChanged=function(_)k(i,_)end}) i={__Index=d,Values=b,Value=g,Multi=e,Buttons={},Opened=false,Callback=j.Callback or u,OnChanged=p,Type="Dropdown",SetValue=c,SetValues=_} k(i,e and g or{g}) s.Options[d]=i return i,a end,Colorpicker=function(_,c,j)local k=j.Title local f=j.Description k=k and t(k)or"Color Picker" f=f and t(f)or"" local e=j.Default or i local d=j.Transparency local i local _=_:CreateElement("ColorPicker",{Label={Title=k,Text=f},Value=e,AlphaEnabled=not not d,Alpha=d or 0,OnChanged=function(_,a)i.Transparency=a r(i,_)end}) i={__Index=c,__Element=_,Value=e,Transparency=d or 0,Title=k,Callback=j.Callback or u,OnChanged=p,Type="Colorpicker",Display=h,SetHSVFromRGB=g,SetValueRGB=b,SetValue=a} i:SetHSVFromRGB(e) i:Display() s.Options[c]=i return i,_ end,Keybind=function(_,a,c)local _=c.Title local b=c.Description _=_ and t(_)or"Toggle" b=b and t(b)or"" local _=c.Default or false local b local _={Destroy=u,SetLabel=u} b={__Index=a,Value=c.Default,Toggled=false,Mode=c.Mode or"Toggle",Callback=c.Callback or u,ChangedCallback=c.ChangedCallback or u,OnChanged=p,Type="Keybind",GetState=j,SetValue=e,OnClick=d,DoClick=f} s.Options[a]=b return b,_ end,Input=function(_,c,h)local f=h.Title local e=h.Description f=f and t(f)or"Text Box" e=e and t(e)or"" local d=h.Default or"" local b=h.Numeric or false local a=h.Finished or false local g local e=_:CreateElement("TextBox",{Label={Title=f,Text=e},Value=d,Numeric=b}) if a then e.FocusLost:Connect(function(_,_)r(g,e.Value)end)else e.OnChanged=function(_)r(g,_)end end g={__Index=c,Value=d,Numeric=b,Finished=a,SetValue=n,Callback=h.Callback or u,OnChanged=p,Type="Input"} s.Options[c]=g return g,e end} local function d(_)_.__Element:Destroy() s.Options[_.__Index]=nil end local function e(a,_)a.__Element:SetLabel({Title=_})end local function f(a,_)a.__Element:SetLabel({Text=_})end local function c(b,a,_,c)local b=b.__Base local a,_=g[a](b,_,c) a.__Element=_ a.Destroy=d a.SetTitle=e a.SetDesc=f return a end local e={} local a=function(_,a)return l({__Base=_.__Page:CreateSection(a,true),Type="Section"},{__index=e})end for d in m,g do e["Add"..d]=function(_,a,b)return c(_,d,a,b)end end local b=true s={Version="V2",Options={},SetTheme=u,ToggleAcrylic=u,ToggleTransparency=u,CreateWindow=function(_,_)if b then b=false q:SetFluentTranslationHack() local b=_.SubTitle local _=_.MinimizeKeybind if b then q.Window:SetSubtitle(b)end if _ then local _ end return{AddTab=function(_,b)local _=b.Title or"" local b=q.Hub:CreatePage(_,b.Icon) return l({__Page=b,__Base=b,Selected=false,Name=_,AddSection=a,Type="Tab"},{__index=e})end,Dialog=function(_,_)q.Window:ShowDialog({Title=_.Title,Text=_.Content,Buttons=_.Buttons})end,SelectTab=function(_,_)end}end end,Notify=function(_,_)return q:ShowToast({Title=_.Title,Text=_.Content,Duration=_.Duration,Type=0})end,Destroy=function(_)q.Window:Close()end} return s
